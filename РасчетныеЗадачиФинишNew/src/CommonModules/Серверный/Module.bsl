#Область ДляПодпискиНаСобытияПроведениеКадровыхДокументов

Процедура ПроведениеКадровыхДокументовОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт

	Источник.Движения.Сотрудники.Записывать = Истина;
	Источник.Движения.ПлановыеНачисления.Записывать = Истина;
	Источник.Движения.ПлановыеУдержания.Записывать = Истина;
	
	Если Не ТипЗнч(Источник) = Тип("ДокументОбъект.ПриказОбУвольнении") Тогда
		Источник.Движения.ЗначенияПоказателейРасчетаНачислений.Записывать = Истина;
		Источник.Движения.ЗначенияПоказателейРасчетаУдержаний.Записывать = Истина;
	КонецЕсли;
	
	Источник.Движения.Записать();

	ЗаполнитьНаборЗаписей_Сотрудники(Источник);
	ЗаполнитьНаборЗаписей_ПлановыеНачисления(Источник);
	ЗаполнитьНаборЗаписей_ПлановыеУдержания(Источник);
	
	Если Не ТипЗнч(Источник) = Тип("ДокументОбъект.ПриказОбУвольнении") Тогда
		ЗаполнитьНаборЗаписей_ЗначенияПоказателейРасчетаНачислений(Источник);
		ЗаполнитьНаборЗаписей_ЗначенияПоказателейРасчетаУдержаний(Источник);
	КонецЕсли;


	Источник.Движения.Записать();

КонецПроцедуры

Процедура ЗаполнитьНаборЗаписей_Сотрудники(Источник)

	Источник.Движения.Сотрудники.Записывать = Истина;

	Движение = Источник.Движения.Сотрудники.Добавить();

	Движение.Период = Источник.ДатаСобытия;
	Движение.ФизическоеЛицо = Источник.ФизическоеЛицо;
	Движение.Подразделение = Источник.Подразделение;
	Движение.Должность = Источник.Должность;

	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПриказОбУвольнении") Тогда

		Движение.Состояние = Перечисления.СостоянияФизическогоЛица.Уволен;
		Движение.ГрафикРаботы = Справочники.ВидыГрафиковРаботы.ПустаяСсылка();

	Иначе
		Движение.Состояние = Перечисления.СостоянияФизическогоЛица.Работает;
		Движение.ГрафикРаботы = Источник.ГрафикРаботы;

	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьНаборЗаписей_ПлановыеНачисления(Источник)

	Источник.Движения.ПлановыеНачисления.Записывать = Истина;

	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПриказОбУвольнении") Тогда

		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПлановыеНачисленияСрезПоследних.ВидРасчета
		|ИЗ
		|	РегистрСведений.ПлановыеНачисления.СрезПоследних(&ДатаСобытия, ФизическоеЛицо = &ФизическоеЛицо
		|	И НачислениеДействует) КАК ПлановыеНачисленияСрезПоследних";

		Запрос.УстановитьПараметр("ДатаСобытия", Источник.ДатаСобытия);
		Запрос.УстановитьПараметр("ФизическоеЛицо", Источник.ФизическоеЛицо);

		РезультатЗапроса = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

			Движение = Источник.Движения.ПлановыеНачисления.Добавить();

			Движение.Период = Источник.ДатаСобытия;
			Движение.ФизическоеЛицо = Источник.ФизическоеЛицо;
			Движение.ВидРасчета = ВыборкаДетальныеЗаписи.ВидРасчета;
			Движение.НачислениеДействует = Ложь;

		КонецЦикла;

	Иначе

		Для Каждого ТекСтрокаНачисления Из Источник.Начисления Цикл

			Движение = Источник.Движения.ПлановыеНачисления.Добавить();

			Движение.Период = Источник.ДатаСобытия;
			Движение.ФизическоеЛицо = Источник.ФизическоеЛицо;
			Движение.ВидРасчета = ТекСтрокаНачисления.ВидРасчета;

			Если ТипЗнч(Источник) = Тип("ДокументОбъект.КадровоеИзменение") Тогда
				Движение.НачислениеДействует = ТекСтрокаНачисления.ПродолжаетДействовать;
			Иначе
				Движение.НачислениеДействует = Истина;
			КонецЕсли;
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьНаборЗаписей_ЗначенияПоказателейРасчетаНачислений(Источник)

	Источник.Движения.ЗначенияПоказателейРасчетаНачислений.Записывать = Истина;

	Для Каждого ТекСтрокаНачисления Из Источник.Начисления Цикл

		Движение = Источник.Движения.ЗначенияПоказателейРасчетаНачислений.Добавить();

		Движение.Период = Источник.ДатаСобытия;
		Движение.ФизическоеЛицо = Источник.ФизическоеЛицо;
		Движение.ВидРасчета = ТекСтрокаНачисления.ВидРасчета;
		Движение.Показатель = ТекСтрокаНачисления.Показатель;

		Движение.Значение = ТекСтрокаНачисления.Значение;
		
	КонецЦикла;
	
КонецПроцедуры


Процедура ЗаполнитьНаборЗаписей_ПлановыеУдержания(Источник)

	Источник.Движения.ПлановыеУдержания.Записывать = Истина;

	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПриказОбУвольнении") Тогда

		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПлановыеУдержанияСрезПоследних.ВидРасчета
		|ИЗ
		|	РегистрСведений.ПлановыеУдержания.СрезПоследних(&ДатаСобытия, ФизическоеЛицо = &ФизическоеЛицо
		|	И УдержаниеДействует) КАК ПлановыеУдержанияСрезПоследних";

		Запрос.УстановитьПараметр("ДатаСобытия", Источник.ДатаСобытия);
		Запрос.УстановитьПараметр("ФизическоеЛицо", Источник.ФизическоеЛицо);

		РезультатЗапроса = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

			Движение = Источник.Движения.ПлановыеУдержания.Добавить();

			Движение.Период = Источник.ДатаСобытия;
			Движение.ФизическоеЛицо = Источник.ФизическоеЛицо;
			Движение.ВидРасчета = ВыборкаДетальныеЗаписи.ВидРасчета;
			Движение.УдержаниеДействует = Ложь;

		КонецЦикла;

	Иначе

		Для Каждого ТекСтрокаНачисления Из Источник.Удержания Цикл

			Движение = Источник.Движения.ПлановыеУдержания.Добавить();

			Движение.Период = Источник.ДатаСобытия;
			Движение.ФизическоеЛицо = Источник.ФизическоеЛицо;
			Движение.ВидРасчета = ТекСтрокаНачисления.ВидРасчета;

			Если ТипЗнч(Источник) = Тип("ДокументОбъект.КадровоеИзменение") Тогда
				Движение.УдержаниеДействует = ТекСтрокаНачисления.ПродолжаетДействовать;
			Иначе
				Движение.УдержаниеДействует = Истина;
			КонецЕсли;
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьНаборЗаписей_ЗначенияПоказателейРасчетаУдержаний(Источник)

	Источник.Движения.ЗначенияПоказателейРасчетаУдержаний.Записывать = Истина;

	Для Каждого ТекСтрокаНачисления Из Источник.Удержания Цикл

		Движение = Источник.Движения.ЗначенияПоказателейРасчетаУдержаний.Добавить();

		Движение.Период = Источник.ДатаСобытия;
		Движение.ФизическоеЛицо = Источник.ФизическоеЛицо;
		Движение.ВидРасчета = ТекСтрокаНачисления.ВидРасчета;
		Движение.Показатель = ТекСтрокаНачисления.Показатель;

		Движение.Значение = ТекСтрокаНачисления.Значение;
		
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти

Процедура ЗаполнениеНовогоДокументаОбработкаЗаполнения(Источник, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт

	Если ДанныеЗаполнения = Неопределено Или ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда

		Источник.ПериодРегистрации = Константы.ТекущийПериод.Получить();

	КонецЕсли;
КонецПроцедуры
Процедура ЗаполнитьТабличнуюЧастьВедущиеВидыРасчета(ВидРасчета, ПВРОбъект) Экспорт

	Если ПВРОбъект.ВедущиеВидыРасчета.Найти(ВидРасчета, "ВидРасчета") = Неопределено Тогда

		НоваяСтрока = ПВРОбъект.ВедущиеВидыРасчета.Добавить();
		НоваяСтрока.ВидРасчета = ВидРасчета;

	Иначе

		Возврат;

	КонецЕсли;

	Для Каждого ТекСтрокаБазовыеВидыРасчета Из ВидРасчета.ВедущиеВидыРасчета Цикл

		ЗаполнитьТабличнуюЧастьВедущиеВидыРасчета(
		ТекСтрокаБазовыеВидыРасчета.ВидРасчета, ПВРОбъект);

	КонецЦикла;

КонецПроцедуры

Функция ПолучитьПроцентВыплатыЧислом(ПроцентСсылка) Экспорт

	Соответствие = Новый Соответствие;
	Соответствие.Вставить(Перечисления.ПроцентыВыплатыБольничного._100, 100);
	Соответствие.Вставить(Перечисления.ПроцентыВыплатыБольничного._60, 60);
	Соответствие.Вставить(Перечисления.ПроцентыВыплатыБольничного._80, 80);

	Возврат Соответствие.Получить(ПроцентСсылка);

КонецФункции // ПолучитьПроцентВыплатыЧислом()

