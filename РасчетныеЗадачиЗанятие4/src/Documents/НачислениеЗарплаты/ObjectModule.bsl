
Процедура Объект_ЗаполнитьТЧ() Экспорт
	
	ОсновныеНачисления.Очистить();
	ДополнительныеНачисления.Очистить();
	Удержания.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СотрудникиСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СотрудникиСрезПоследних.Подразделение КАК Подразделение,
		|	СотрудникиСрезПоследних.Должность КАК Должность,
		|	СотрудникиСрезПоследних.ГрафикРаботы КАК ГрафикРаботы,
		|	&НачалоМесяца КАК Период,
		|	СотрудникиСрезПоследних.Состояние КАК Состояние
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	РегистрСведений.Сотрудники.СрезПоследних(&НачалоМесяца, ) КАК СотрудникиСрезПоследних
		|ГДЕ
		|	СотрудникиСрезПоследних.Состояние <> &Состояние
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Сотрудники.ФизическоеЛицо,
		|	Сотрудники.Подразделение,
		|	Сотрудники.Должность,
		|	Сотрудники.ГрафикРаботы,
		|	Сотрудники.Период,
		|	Сотрудники.Состояние
		|ИЗ
		|	РегистрСведений.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеОсновныеНачисленияСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПлановыеОсновныеНачисленияСрезПоследних.ВидРасчета КАК ВидРасчета,
		|	ПлановыеОсновныеНачисленияСрезПоследних.Размер КАК Размер,
		|	&НачалоМесяца КАК Период,
		|	ПлановыеОсновныеНачисленияСрезПоследних.ВидРасчета.ТребуетСбораБазы КАК ТребуетСбораБазы
		|ПОМЕСТИТЬ ВТПлановыеОсновныеНачисления
		|ИЗ
		|	РегистрСведений.ПлановыеОсновныеНачисления.СрезПоследних(&НачалоМесяца, ) КАК ПлановыеОсновныеНачисленияСрезПоследних
		|ГДЕ
		|	ПлановыеОсновныеНачисленияСрезПоследних.Размер > 0
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ПлановыеОсновныеНачисления.ФизическоеЛицо,
		|	ПлановыеОсновныеНачисления.ВидРасчета,
		|	ПлановыеОсновныеНачисления.Размер,
		|	ПлановыеОсновныеНачисления.Период,
		|	ПлановыеОсновныеНачисления.ВидРасчета.ТребуетСбораБазы
		|ИЗ
		|	РегистрСведений.ПлановыеОсновныеНачисления КАК ПлановыеОсновныеНачисления
		|ГДЕ
		|	ПлановыеОсновныеНачисления.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеДополнительныеНачисленияСрезПоследних.ФизическоеЛицо,
		|	ПлановыеДополнительныеНачисленияСрезПоследних.ВидРасчета,
		|	ПлановыеДополнительныеНачисленияСрезПоследних.Размер,
		|	&НачалоМесяца КАК Период
		|ПОМЕСТИТЬ ВТПлановыеДополнительныеНачисления
		|ИЗ
		|	РегистрСведений.ПлановыеДополнительныеНачисления.СрезПоследних(&НачалоМесяца, ) КАК ПлановыеДополнительныеНачисленияСрезПоследних
		|ГДЕ
		|	ПлановыеДополнительныеНачисленияСрезПоследних.Размер > 0
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ПлановыеДополнительныеНачисления.ФизическоеЛицо,
		|	ПлановыеДополнительныеНачисления.ВидРасчета,
		|	ПлановыеДополнительныеНачисления.Размер,
		|	ПлановыеДополнительныеНачисления.Период
		|ИЗ
		|	РегистрСведений.ПлановыеДополнительныеНачисления КАК ПлановыеДополнительныеНачисления
		|ГДЕ
		|	ПлановыеДополнительныеНачисления.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеУдержанияСрезПоследних.ФизическоеЛицо,
		|	ПлановыеУдержанияСрезПоследних.ВидРасчета,
		|	ПлановыеУдержанияСрезПоследних.Размер,
		|	&НачалоМесяца КАК Период
		|ПОМЕСТИТЬ ВТПлановыеУдержания
		|ИЗ
		|	РегистрСведений.ПлановыеУдержания.СрезПоследних(&НачалоМесяца, ) КАК ПлановыеУдержанияСрезПоследних
		|ГДЕ
		|	ПлановыеУдержанияСрезПоследних.Размер > 0
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ПлановыеУдержания.ФизическоеЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Размер,
		|	ПлановыеУдержания.Период
		|ИЗ
		|	РегистрСведений.ПлановыеУдержания КАК ПлановыеУдержания
		|ГДЕ
		|	ПлановыеУдержания.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПлановыеОсновныеНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВТСотрудники.Подразделение КАК Подразделение,
		|	ВТСотрудники.Должность КАК Должность,
		|	ВТПлановыеОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ВТПлановыеОсновныеНачисления.Размер КАК Размер,
		|	ВТПлановыеОсновныеНачисления.Период КАК Период,
		|	ВТСотрудники.ГрафикРаботы КАК ГрафикРаботы,
		|	ВТСотрудники.Состояние КАК Состояние,
		|	ВТПлановыеОсновныеНачисления.ТребуетСбораБазы КАК ТребуетСбораБазы
		|ИЗ
		|	ВТСотрудники КАК ВТСотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПлановыеОсновныеНачисления КАК ВТПлановыеОсновныеНачисления
		|		ПО (ВТПлановыеОсновныеНачисления.ФизическоеЛицо = ВТСотрудники.ФизическоеЛицо)
		|			И (ВТПлановыеОсновныеНачисления.Период = ВТСотрудники.Период)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ
		|ИТОГИ ПО
		|	ФизическоеЛицо,
		|	ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПлановыеДополнительныеНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВТСотрудники.Подразделение КАК Подразделение,
		|	ВТСотрудники.Должность КАК Должность,
		|	ВТПлановыеДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ВТПлановыеДополнительныеНачисления.Размер КАК Размер,
		|	ВТПлановыеДополнительныеНачисления.Период КАК Период,
		|	ВТСотрудники.ГрафикРаботы КАК ГрафикРаботы,
		|	ВТСотрудники.Состояние КАК Состояние,
		|	ВТПлановыеДополнительныеНачисления.ВидРасчета.ТребуетСбораБазы КАК ТребуетСбораБазы
		|ИЗ
		|	ВТСотрудники КАК ВТСотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПлановыеДополнительныеНачисления КАК ВТПлановыеДополнительныеНачисления
		|		ПО (ВТПлановыеДополнительныеНачисления.ФизическоеЛицо = ВТСотрудники.ФизическоеЛицо)
		|			И (ВТПлановыеДополнительныеНачисления.Период = ВТСотрудники.Период)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ
		|ИТОГИ ПО
		|	ФизическоеЛицо,
		|	ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПлановыеУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВТСотрудники.Подразделение КАК Подразделение,
		|	ВТСотрудники.Должность КАК Должность,
		|	ВТПлановыеУдержания.ВидРасчета КАК ВидРасчета,
		|	ВТПлановыеУдержания.Размер КАК Размер,
		|	ВТПлановыеУдержания.Период КАК Период,
		|	ВТСотрудники.ГрафикРаботы КАК ГрафикРаботы,
		|	ВТСотрудники.Состояние КАК Состояние,
		|	ВТПлановыеУдержания.ВидРасчета.ТребуетСбораБазы КАК ТребуетСбораБазы
		|ИЗ
		|	ВТСотрудники КАК ВТСотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПлановыеУдержания КАК ВТПлановыеУдержания
		|		ПО (ВТПлановыеУдержания.ФизическоеЛицо = ВТСотрудники.ФизическоеЛицо)
		|			И (ВТПлановыеУдержания.Период = ВТСотрудники.Период)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ
		|ИТОГИ ПО
		|	ФизическоеЛицо,
		|	ВидРасчета";
	
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("НачалоМесяца", ПериодРегистрации);
	Запрос.УстановитьПараметр("Состояние", Перечисления.СостоянияФизическогоЛица.Уволен);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатЗапроса = МассивРезультатов.Получить(4);
	
	ВыборкаФизическоеЛицо = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФизическоеЛицо.Следующий() Цикл
		
		ВыборкаВидРасчета = ВыборкаФизическоеЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ВыборкаВидРасчета.Следующий() Цикл
			
			ПериодДействияКонец = КонецМесяца(ПериодРегистрации);
			
			ВыборкаДетальныеЗаписи = ВыборкаВидРасчета.Выбрать();
	
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

				Если ВыборкаДетальныеЗаписи.Размер = 0 Тогда
					
					ПериодДействияКонец = КонецДня(ВыборкаДетальныеЗаписи.Период);
					Продолжить;
					
				КонецЕсли;
					
					НоваяСтрока = ОсновныеНачисления.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
					
					НоваяСтрока.ПериодДействияКонец = ПериодДействияКонец;
					НоваяСтрока.ПериодДействияНачало = ВыборкаДетальныеЗаписи.Период;
					
					Если ВыборкаДетальныеЗаписи.ТребуетСбораБазы Тогда
					
						НоваяСтрока.БазовыйПериодКонец = ПериодДействияКонец;
						НоваяСтрока.БазовыйПериодНачало = ВыборкаДетальныеЗаписи.Период;
					
					КонецЕсли;
					
					ПериодДействияКонец = ВыборкаДетальныеЗаписи.Период - 1;
					
				КонецЦикла;
				
		КонецЦикла;
	КонецЦикла;
	
	//----------------------------------
	
	РезультатЗапроса = МассивРезультатов.Получить(5);
	
	ВыборкаФизическоеЛицо = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФизическоеЛицо.Следующий() Цикл
		
		ВыборкаВидРасчета = ВыборкаФизическоеЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ВыборкаВидРасчета.Следующий() Цикл
			
			ПериодДействияКонец = КонецМесяца(ПериодРегистрации);
			
			ВыборкаДетальныеЗаписи = ВыборкаВидРасчета.Выбрать();
	
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

				Если ВыборкаДетальныеЗаписи.Размер = 0 Тогда
					
					ПериодДействияКонец = КонецДня(ВыборкаДетальныеЗаписи.Период);
					Продолжить;
					
				КонецЕсли;
					
					НоваяСтрока = ДополнительныеНачисления.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
					
					Если ВыборкаДетальныеЗаписи.ТребуетСбораБазы Тогда
					
						НоваяСтрока.БазовыйПериодКонец = ПериодДействияКонец;
						НоваяСтрока.БазовыйПериодНачало = ВыборкаДетальныеЗаписи.Период;
					
					КонецЕсли;
					
					ПериодДействияКонец = ВыборкаДетальныеЗаписи.Период - 1;
					
				КонецЦикла;
				
		КонецЦикла;
	КонецЦикла;
	

	//----------------------
	
	РезультатЗапроса = МассивРезультатов.Получить(6);
	
	ВыборкаФизическоеЛицо = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФизическоеЛицо.Следующий() Цикл
		
		ВыборкаВидРасчета = ВыборкаФизическоеЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ВыборкаВидРасчета.Следующий() Цикл
			
			ПериодДействияКонец = КонецМесяца(ПериодРегистрации);
			
			ВыборкаДетальныеЗаписи = ВыборкаВидРасчета.Выбрать();
	
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

				Если ВыборкаДетальныеЗаписи.Размер = 0 Тогда
					
					ПериодДействияКонец = КонецДня(ВыборкаДетальныеЗаписи.Период);
					Продолжить;
					
				КонецЕсли;
					
					НоваяСтрока = Удержания.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
					
					Если ВыборкаДетальныеЗаписи.ТребуетСбораБазы Тогда
					
						НоваяСтрока.БазовыйПериодКонец = ПериодДействияКонец;
						НоваяСтрока.БазовыйПериодНачало = ВыборкаДетальныеЗаписи.Период;
					
					КонецЕсли;
					
					ПериодДействияКонец = ВыборкаДетальныеЗаписи.Период - 1;
					
				КонецЦикла;
				
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	ЗаполнитьНаборЗаписей_ОсновныеНачисления("Проведение");
	ЗаполнитьНаборЗаписей_ДополнительныеНачисления("Проведение");
	ЗаполнитьНаборЗаписей_Удержания("Проведение");
	
КонецПроцедуры



#Область РассчитатьРесурсыПоКоманде

Процедура РассчитатьРесурсы() Экспорт 

	НачатьТранзакцию();
	
	ЗаполнитьНаборЗаписей_ОсновныеНачисления("Расчет");
	ЗаполнитьНаборЗаписей_ДополнительныеНачисления("Расчет");
	ЗаполнитьНаборЗаписей_Удержания("Расчет");
	
	РассчитатьРесурсы_ОсновныеНачисления();
	РассчитатьРесурсы_ДополнительныеНачисления();
	РассчитатьРесурсы_Удержания();
	
	ПерезаполнитьТабличнуюЧасть_ОсновныеНачисления();
	ПерезаполнитьТабличнуюЧасть_ДополнительныеНачисления();
	ПерезаполнитьТабличнуюЧасть_Удержания();
	
	ОчиститьНаборыЗаписейПослеРасчета();
	
	ЗафиксироватьТранзакцию();

КонецПроцедуры

Процедура ПерезаполнитьТабличнуюЧасть_ОсновныеНачисления() 
	
	ОсновныеНачисления.Очистить();
	
	Для каждого Движение Из Движения.ОсновныеНачисления Цикл
	
		НоваяСтрока = ОсновныеНачисления.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Движение);
	
	КонецЦикла;

КонецПроцедуры

Процедура ПерезаполнитьТабличнуюЧасть_ДополнительныеНачисления() 
	
	ДополнительныеНачисления.Очистить();
	
	Для каждого Движение Из Движения.ДополнительныеНачисления Цикл
	
		НоваяСтрока = ДополнительныеНачисления.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Движение);
	
	КонецЦикла;

КонецПроцедуры

Процедура ПерезаполнитьТабличнуюЧасть_Удержания() 
	
	Удержания.Очистить();
	
	Для каждого Движение Из Движения.Удержания Цикл
	
		НоваяСтрока = Удержания.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Движение);
	
	КонецЦикла;

КонецПроцедуры


Процедура ОчиститьНаборыЗаписейПослеРасчета()

	Движения.ОсновныеНачисления.Очистить();;
	Движения.ОсновныеНачисления.Записать();
	
	Движения.ДополнительныеНачисления.Очистить();
	Движения.ДополнительныеНачисления.Записать();
	
	Движения.Удержания.Очистить();
	Движения.Удержания.Записать();

КонецПроцедуры

#КонецОбласти


#Область ЗаполнениеНаборовЗаписей

Процедура ЗаполнитьНаборЗаписей_ОсновныеНачисления(КакИспользуем)
	
	Перем Движение, ТекСтрокаОсновныеНачисления;
	
	Для Каждого ТекСтрокаОсновныеНачисления Из ОсновныеНачисления Цикл
		
		Движение = Движения.ОсновныеНачисления.Добавить();
		
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидРасчета;
		Движение.Размер = ТекСтрокаОсновныеНачисления.Размер;
		Движение.ГрафикРаботы = ТекСтрокаОсновныеНачисления.ГрафикРаботы;
		
		Движение.ПериодДействияНачало = ТекСтрокаОсновныеНачисления.ПериодДействияНачало;
		Движение.ПериодДействияКонец = ТекСтрокаОсновныеНачисления.ПериодДействияКонец;
		
		Движение.ПериодРегистрации = ПериодРегистрации;
		
		Движение.БазовыйПериодНачало = ТекСтрокаОсновныеНачисления.БазовыйПериодНачало;
		Движение.БазовыйПериодКонец = ТекСтрокаОсновныеНачисления.БазовыйПериодКонец;
		
		Движение.ФизическоеЛицо = ТекСтрокаОсновныеНачисления.ФизическоеЛицо;
		Движение.Подразделение = ТекСтрокаОсновныеНачисления.Подразделение;
		Движение.Должность = ТекСтрокаОсновныеНачисления.Должность;
		
		Если КакИспользуем = "Расчет" Тогда
			Движение.Результат = 0;
			Движение.ОтработаноДней = 0;
		ИначеЕсли КакИспользуем = "Проведение" Тогда
			Движение.Результат = ТекСтрокаОсновныеНачисления.Результат;
			Движение.ОтработаноДней = ТекСтрокаОсновныеНачисления.ОтработаноДней;
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ОсновныеНачисления.Записать();
	
КонецПроцедуры

Процедура ЗаполнитьНаборЗаписей_ДополнительныеНачисления(КакИспользуем)
	
	Перем Движение, ТекСтрокаДополнительныеНачисления;
	
	Для Каждого ТекСтрокаДополнительныеНачисления Из ДополнительныеНачисления Цикл
		
		Движение = Движения.ДополнительныеНачисления.Добавить();
		
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаДополнительныеНачисления.ВидРасчета;
		Движение.Размер = ТекСтрокаДополнительныеНачисления.Размер;
		
		Движение.ПериодРегистрации = ПериодРегистрации;
		
		Движение.БазовыйПериодНачало = ТекСтрокаДополнительныеНачисления.БазовыйПериодНачало;
		Движение.БазовыйПериодКонец = ТекСтрокаДополнительныеНачисления.БазовыйПериодКонец;
		
		Движение.ФизическоеЛицо = ТекСтрокаДополнительныеНачисления.ФизическоеЛицо;
		Движение.Подразделение = ТекСтрокаДополнительныеНачисления.Подразделение;
		Движение.Должность = ТекСтрокаДополнительныеНачисления.Должность;
		
		Если КакИспользуем = "Расчет" Тогда
			Движение.Результат = 0;
		ИначеЕсли КакИспользуем = "Проведение" Тогда
			Движение.Результат = ТекСтрокаДополнительныеНачисления.Результат;
		КонецЕсли;
		
	КонецЦикла;

	Движения.ДополнительныеНачисления.Записать();
	
	
КонецПроцедуры

Процедура ЗаполнитьНаборЗаписей_Удержания(КакИспользуем)
	
	Перем Движение, ТекСтрокаУдержания;
	
	Для Каждого ТекСтрокаУдержания Из Удержания Цикл
		Движение = Движения.Удержания.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаУдержания.ВидРасчета;
		Движение.Размер = ТекСтрокаУдержания.Размер;

		Движение.ПериодРегистрации = ПериодРегистрации;

		Движение.БазовыйПериодНачало = ТекСтрокаУдержания.БазовыйПериодНачало;
		Движение.БазовыйПериодКонец = ТекСтрокаУдержания.БазовыйПериодКонец;

		Движение.ФизическоеЛицо = ТекСтрокаУдержания.ФизическоеЛицо;
		Движение.Подразделение = ТекСтрокаУдержания.Подразделение;
		Движение.Должность = ТекСтрокаУдержания.Должность;
		
		Если КакИспользуем = "Расчет" Тогда
			Движение.Результат = 0;
		ИначеЕсли КакИспользуем = "Проведение" Тогда
			Движение.Результат = ТекСтрокаУдержания.Результат;
		КонецЕсли;
		
	КонецЦикла;

	Движения.Удержания.Записать();
	
	
КонецПроцедуры

#КонецОбласти 


#Область РасчетРесурсов
	

Процедура РассчитатьРесурсы_ОсновныеНачисления()

	НаборЗаписей = Движения.ОсновныеНачисления;
	
    //Получаем упорядоченные по категориям данные текущего набора записей, записанные в БД
	Менеджер = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Менеджер;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	ОсновныеНачисления.Регистратор КАК Регистратор,
	|	ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
	|	ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
	|	ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
	|	ОсновныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ОсновныеНачисления.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	ОсновныеНачисления.Активность КАК Активность,
	|	ОсновныеНачисления.Сторно КАК Сторно,
	|	ОсновныеНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ОсновныеНачисления.Подразделение КАК Подразделение,
	|	ОсновныеНачисления.Должность КАК Должность,
	|	ОсновныеНачисления.Результат КАК Результат,
	|	ОсновныеНачисления.ОтработаноДней КАК ОтработаноДней,
	|	ОсновныеНачисления.Размер КАК Размер,
	|	ОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы
	|ПОМЕСТИТЬ ВТДвижения
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисления КАК ОсновныеНачисления
	|ГДЕ
	|	ОсновныеНачисления.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТДвижения.ВидРасчета
	|ПОМЕСТИТЬ ВТВидыРасчетаДокумента
	|ИЗ
	|	ВТДвижения КАК ВТДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВидыРасчетаДокумента.ВидРасчета,
	|	ОсновныеНачисленияВедущиеВидыРасчета.ВидРасчета КАК ВедущийВидРасчета
	|ПОМЕСТИТЬ ВТВедущиеВидыРасчета
	|ИЗ
	|	ВТВидыРасчетаДокумента КАК ВТВидыРасчетаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисления.ВедущиеВидыРасчета КАК ОсновныеНачисленияВедущиеВидыРасчета
	|		ПО ВТВидыРасчетаДокумента.ВидРасчета = ОсновныеНачисленияВедущиеВидыРасчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВедущиеВидыРасчета.ВидРасчета,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТВидыРасчетаДокумента.ВидРасчета) КАК Приоритет
	|ПОМЕСТИТЬ ВТПриоритетыВидовРасчета
	|ИЗ
	|	ВТВедущиеВидыРасчета КАК ВТВедущиеВидыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыРасчетаДокумента КАК ВТВидыРасчетаДокумента
	|		ПО ВТВедущиеВидыРасчета.ВедущийВидРасчета = ВТВидыРасчетаДокумента.ВидРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТВедущиеВидыРасчета.ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвижения.НомерСтроки КАК НомерСтроки,
	|	ВТДвижения.ВидРасчета КАК ВидРасчета,
	|	ВТДвижения.ПериодРегистрации КАК ПериодРегистрации,
	|	ВТДвижения.Регистратор КАК Регистратор,
	|	ВТДвижения.ПериодДействия КАК ПериодДействия,
	|	ВТДвижения.ПериодДействияНачало КАК ПериодДействияНачало,
	|	ВТДвижения.ПериодДействияКонец КАК ПериодДействияКонец,
	|	ВТДвижения.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ВТДвижения.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	ВТДвижения.Активность КАК Активность,
	|	ВТДвижения.Сторно КАК Сторно,
	|	ВТДвижения.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТДвижения.Подразделение КАК Подразделение,
	|	ВТДвижения.Должность КАК Должность,
	|	ВТДвижения.Результат КАК Результат,
	|	ВТДвижения.ОтработаноДней КАК ОтработаноДней,
	|	ВТДвижения.Размер КАК Размер,
	|	ВТДвижения.ГрафикРаботы КАК ГрафикРаботы,
	|	ВТПриоритетыВидовРасчета.Приоритет КАК Приоритет
	|ПОМЕСТИТЬ ВТДвиженияСПриоритетом
	|ИЗ
	|	ВТДвижения КАК ВТДвижения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПриоритетыВидовРасчета КАК ВТПриоритетыВидовРасчета
	|		ПО ВТДвижения.ВидРасчета = ВТПриоритетыВидовРасчета.ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвиженияСПриоритетом.НомерСтроки КАК НомерСтроки,
	|	ВТДвиженияСПриоритетом.Приоритет КАК Приоритет,
	|	ВТДвиженияСПриоритетом.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	ВТДвиженияСПриоритетом.ВидРасчета.Формула КАК Формула,
	|	ВТДвиженияСПриоритетом.ВидРасчета.ЗачетОтработанногоВремени КАК ЗачетОтработанногоВремени
	|ИЗ
	|	ВТДвиженияСПриоритетом КАК ВТДвиженияСПриоритетом
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВидыРасчетаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВедущиеВидыРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПриоритетыВидовРасчета";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПриоритет = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	//Внешний цикл по категориям
	Пока ВыборкаПриоритет.Следующий() Цикл
		
		//Запрос для получения базы и данных графика для записей с текущей категорией 

		//Вложенный цикл по записям текущей категории
		ВыборкаДетальныеЗаписи = ВыборкаПриоритет.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Запись = НаборЗаписей.Получить(ВыборкаДетальныеЗаписи.НомерСтроки - 1);
			
			Если ВыборкаДетальныеЗаписи.СпособРасчета = Перечисления.СпособыРасчета.ПоМесячнойТарифнойСтавкеПоДням Тогда
				
				Норма = 20;
				
				Если Норма = 0 Тогда
					
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Не заполнен график";
					Сообщение.Сообщить();
					
					Возврат;
					
				КонецЕсли;
				
				Факт = 15;
				
				Ставка = Запись.Размер;
				
				Запись.Результат = Ставка * Факт / Норма;
				
			ИначеЕсли ВыборкаДетальныеЗаписи.СпособРасчета = Перечисления.СпособыРасчета.Процентом Тогда
		
				База = 7500;
				
				Процент = Запись.Размер;
				
				Запись.Результат = База * Процент / 100;
				
				
			КонецЕсли;
			
			
			//Проверка - надо ли записать отработанные дни
			Если ВыборкаДетальныеЗаписи.ЗачетОтработанногоВремени Тогда
				
				Запись.ОтработаноДней = 15;
				
			КонецЕсли;
			
		КонецЦикла;
		
		НаборЗаписей.Записать(,Истина);
		
	КонецЦикла;
	
	
КонецПроцедуры

Процедура РассчитатьРесурсы_ДополнительныеНачисления() 
	
	Возврат;
	
	НаборЗаписей = Движения.ДополнительныеНачисления;
	
	//Получаем упорядоченные по категориям данные текущего набора записей, записанные в БД
	Менеджер = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Менеджер;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
	|	ДополнительныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	ДополнительныеНачисления.Регистратор КАК Регистратор,
	|	ДополнительныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ДополнительныеНачисления.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	ДополнительныеНачисления.Активность КАК Активность,
	|	ДополнительныеНачисления.Сторно КАК Сторно,
	|	ДополнительныеНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДополнительныеНачисления.Подразделение КАК Подразделение,
	|	ДополнительныеНачисления.Должность КАК Должность,
	|	ДополнительныеНачисления.Результат КАК Результат,
	|	ДополнительныеНачисления.Размер КАК Размер
	|ПОМЕСТИТЬ ВТДвижения
	|ИЗ
	|	РегистрРасчета.ДополнительныеНачисления КАК ДополнительныеНачисления
	|ГДЕ
	|	ДополнительныеНачисления.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеНачисления.ВидРасчета КАК ВидРасчета
	|ПОМЕСТИТЬ ВТВидыРасчетаДокумента
	|ИЗ
	|	ВТДвижения КАК ДополнительныеНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВидыРасчетаДокумента.ВидРасчета КАК ВидРасчета,
	|	ДополнительныеНачисленияВедущиеВидыРасчета.ВидРасчета КАК ВедущийВидРасчета
	|ПОМЕСТИТЬ ВТВедущиеВидыРасчета
	|ИЗ
	|	ВТВидыРасчетаДокумента КАК ВТВидыРасчетаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисления.ВедущиеВидыРасчета КАК ДополнительныеНачисленияВедущиеВидыРасчета
	|		ПО ВТВидыРасчетаДокумента.ВидРасчета = ДополнительныеНачисленияВедущиеВидыРасчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВедущиеВидыРасчета.ВидРасчета КАК ВидРасчета,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТВидыРасчетаДокумента.ВидРасчета) КАК Приоритет
	|ПОМЕСТИТЬ ВТПриоритетыВидовРасчета
	|ИЗ
	|	ВТВедущиеВидыРасчета КАК ВТВедущиеВидыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыРасчетаДокумента КАК ВТВидыРасчетаДокумента
	|		ПО ВТВедущиеВидыРасчета.ВедущийВидРасчета = ВТВидыРасчетаДокумента.ВидРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТВедущиеВидыРасчета.ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПриоритетыВидовРасчета.Приоритет КАК Приоритет,
	|	ВТДвижения.НомерСтроки КАК НомерСтроки,
	|	ВТДвижения.ВидРасчета КАК ВидРасчета,
	|	ВТДвижения.ПериодРегистрации КАК ПериодРегистрации,
	|	ВТДвижения.Регистратор КАК Регистратор,
	|	ВТДвижения.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ВТДвижения.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	ВТДвижения.Активность КАК Активность,
	|	ВТДвижения.Сторно КАК Сторно,
	|	ВТДвижения.ФизическоеЛицо,
	|	ВТДвижения.Подразделение КАК Подразделение,
	|	ВТДвижения.Должность КАК Должность,
	|	ВТДвижения.Результат КАК Результат,
	|	ВТДвижения.Размер КАК Размер
	|ПОМЕСТИТЬ ВТДвиженияСПриоритетом
	|ИЗ
	|	ВТДвижения КАК ВТДвижения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПриоритетыВидовРасчета КАК ВТПриоритетыВидовРасчета
	|		ПО ВТДвижения.ВидРасчета = ВТПриоритетыВидовРасчета.ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвиженияСПриоритетом.НомерСтроки КАК НомерСтроки,
	|	ВТДвиженияСПриоритетом.ВидРасчета КАК ВидРасчета,
	|	ВТДвиженияСПриоритетом.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	ВТДвиженияСПриоритетом.Приоритет КАК Приоритет
	|ИЗ
	|	ВТДвиженияСПриоритетом КАК ВТДвиженияСПриоритетом
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВидыРасчетаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВедущиеВидыРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПриоритетыВидовРасчета";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПриоритет = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	//Внешний цикл по категориям
	Пока ВыборкаПриоритет.Следующий() Цикл
		
		//Вложенный цикл по записям текущей категории
		ВыборкаДетальныеЗаписи = ВыборкаПриоритет.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Запись = НаборЗаписей.Получить(ВыборкаДетальныеЗаписи.НомерСтроки - 1);
			
		КонецЦикла;
		
		НаборЗаписей.Записать(,Истина);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьРесурсы_Удержания() 

	Возврат;
	
	НаборЗаписей = Движения.Удержания;

    //Получаем упорядоченные по категориям данные текущего набора записей, записанные в БД
	Менеджер = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Менеджер;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Удержания.НомерСтроки КАК НомерСтроки,
	|	Удержания.ВидРасчета КАК ВидРасчета,
	|	Удержания.ПериодРегистрации КАК ПериодРегистрации,
	|	Удержания.Регистратор КАК Регистратор,
	|	Удержания.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	Удержания.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	Удержания.Активность КАК Активность,
	|	Удержания.Сторно КАК Сторно,
	|	Удержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Удержания.Подразделение КАК Подразделение,
	|	Удержания.Должность КАК Должность,
	|	Удержания.Результат КАК Результат,
	|	Удержания.Размер КАК Размер
	|ПОМЕСТИТЬ ВТДвижения
	|ИЗ
	|	РегистрРасчета.Удержания КАК Удержания
	|ГДЕ
	|	Удержания.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТДвижения.ВидРасчета КАК ВидРасчета
	|ПОМЕСТИТЬ ВТВидыРасчетаДокумента
	|ИЗ
	|	ВТДвижения КАК ВТДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВидыРасчетаДокумента.ВидРасчета КАК ВидРасчета,
	|	УдержанияВедущиеВидыРасчета.ВидРасчета КАК ВедущийВидРасчета
	|ПОМЕСТИТЬ ВТВедущиеВидыРасчета
	|ИЗ
	|	ВТВидыРасчетаДокумента КАК ВТВидыРасчетаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Удержания.ВедущиеВидыРасчета КАК УдержанияВедущиеВидыРасчета
	|		ПО ВТВидыРасчетаДокумента.ВидРасчета = УдержанияВедущиеВидыРасчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВедущиеВидыРасчета.ВидРасчета КАК ВидРасчета,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТВидыРасчетаДокумента.ВидРасчета) КАК Приоритет
	|ПОМЕСТИТЬ ВТПриоритетыВидовРасчета
	|ИЗ
	|	ВТВедущиеВидыРасчета КАК ВТВедущиеВидыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыРасчетаДокумента КАК ВТВидыРасчетаДокумента
	|		ПО ВТВедущиеВидыРасчета.ВедущийВидРасчета = ВТВидыРасчетаДокумента.ВидРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТВедущиеВидыРасчета.ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвижения.НомерСтроки КАК НомерСтроки,
	|	ВТДвижения.ВидРасчета КАК ВидРасчета,
	|	ВТДвижения.ПериодРегистрации КАК ПериодРегистрации,
	|	ВТДвижения.Регистратор КАК Регистратор,
	|	ВТДвижения.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ВТДвижения.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	ВТДвижения.Активность КАК Активность,
	|	ВТДвижения.Сторно КАК Сторно,
	|	ВТДвижения.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТДвижения.Подразделение КАК Подразделение,
	|	ВТДвижения.Должность КАК Должность,
	|	ВТДвижения.Результат КАК Результат,
	|	ВТДвижения.Размер КАК Размер,
	|	ВТПриоритетыВидовРасчета.Приоритет КАК Приоритет
	|ПОМЕСТИТЬ ВТДвиженияСПриоритетом
	|ИЗ
	|	ВТДвижения КАК ВТДвижения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПриоритетыВидовРасчета КАК ВТПриоритетыВидовРасчета
	|		ПО ВТДвижения.ВидРасчета = ВТПриоритетыВидовРасчета.ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвиженияСПриоритетом.НомерСтроки КАК НомерСтроки,
	|	ВТДвиженияСПриоритетом.ВидРасчета КАК ВидРасчета,
	|	ВТДвиженияСПриоритетом.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	ВТДвиженияСПриоритетом.Приоритет КАК Приоритет
	|ИЗ
	|	ВТДвиженияСПриоритетом КАК ВТДвиженияСПриоритетом
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВидыРасчетаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВедущиеВидыРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПриоритетыВидовРасчета";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПриоритет = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	//Внешний цикл по категориям
	Пока ВыборкаПриоритет.Следующий() Цикл
		
		//Вложенный цикл по записям текущей категории
		ВыборкаДетальныеЗаписи = ВыборкаПриоритет.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

			Запись = НаборЗаписей.Получить(ВыборкаДетальныеЗаписи.НомерСтроки - 1);
			
		КонецЦикла;
		
		НаборЗаписей.Записать(,Истина);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 




